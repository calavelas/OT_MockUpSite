async function getAccessToken(clientId,clientSecret,siteUrl){

  let formdata = new FormData();
  formdata.append("grant_type", "client_credentials");
  formdata.append("client_id", clientId);
  formdata.append("client_secret", clientSecret);

  let requestOptions = {
    method: 'POST',
    body: formdata,

    redirect: 'follow'
  };

  return new Promise((resolve, reject) => {
        fetch("https://"+siteUrl+"/api/access/v1/oauth/token", requestOptions)
        .then(response => response.json())
        .then(result => {
            resolve(result.access_token)
    })
  })
}

async function getConllectionPoint(token,siteUrl,collectionPointID){
  let headers = new Headers();
  headers.append("Authorization", "Bearer "+token);

  let requestOptions = {
    method: 'GET',
    headers: headers,
    redirect: 'follow'
  };

  return new Promise((resolve, reject) => {
    fetch("https://"+siteUrl+"/api/consentmanager/v2/collectionpoints?id="+collectionPointID+"&status=ACTIVE", requestOptions)
    .then(response => response.json())
    .then(result => {
      resolve(result)
    })
    .catch(error => console.log('error', error));
  })
}

async function getPurposeDetail(token,siteUrl,purposeId){
    let headers = new Headers();
    headers.append("Authorization", "Bearer "+token);

    let requestOptions = {
      method: 'GET',
      headers: headers,
      redirect: 'follow'
    };

    return new Promise((resolve, reject) => {
      fetch("https://"+siteUrl+"/api/consentmanager/v2/purposes/"+purposeId, requestOptions)
      .then(response => response.json())
      .then(result => {
        resolve(result)
        console.log(result)
      })
      .catch(error => console.log('error', error));
  })
}

async function getPurposeDetail(token,siteUrl,purposeId){
    let headers = new Headers();
    headers.append("Authorization", "Bearer "+token);

    let requestOptions = {
      method: 'GET',
      headers: headers,
      redirect: 'follow'
    };

    return new Promise((resolve, reject) => {
      fetch("https://"+siteUrl+"/api/consentmanager/v2/purposes/"+purposeId, requestOptions)
      .then(response => response.json())
      .then(result => {
        resolve(result)
        console.log(result)
      })
      .catch(error => console.log('error', error));
  })
}

async function main(){
  const clientId = '6f446098f5d34809952b30bf9c8eb91e'
  const clientSecret = '2CwWdv6HzfIU7AbwFTsgvNxvHnkoyJuo'
  const siteUrl = 'app-apac.onetrust.com'
  const collectionPointID = 'b29a020c-acc9-4bef-a268-46682145339d'

  let token = await getAccessToken(clientId,clientSecret,siteUrl)
  let collectionPointInfo = await getConllectionPoint(token,siteUrl,collectionPointID)
  let collectionPointPurposes = collectionPointInfo.content[0].purposes
  let purposeNo = 0
  let output =[]

  console.log(collectionPointInfo)
  console.log(collectionPointPurposes)
  collectionPointPurposes.forEach(function(item){
    purposeNo += 1
    output += `
    <p>${purposeNo}. ${item.description}<br><span class="text-success">(OT Consent : ${item.label})</span></p>
    <div class="form-check form-check-inline">
      <input class="form-check-input" type="radio" name="customRadioInline${purposeNo}" id="P${purposeNo}" required>
      <label class="form-check-label" for="inlineRadio1">Consent</label>
    </div>
    <div class="form-check form-check-inline">
      <input class="form-check-input" type="radio" name="customRadioInline${purposeNo}" id="P${purposeNo} decline" required>
      <label class="form-check-label" for="inlineRadio2">Decline</label>
    </div>
    <div class="my-3"></div>
    `;
  })
  document.getElementById('autoGeneratedPurpose2').innerHTML = output;
}


main()
